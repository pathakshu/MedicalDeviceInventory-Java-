/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WarehouseManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Product;
import Business.Enterprise.SupplierEnterprise;
import Business.Enterprise.WarehouseEnterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MaintenanceWorkRequest;
import java.awt.CardLayout;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shubham
 */
public class DeviceInventoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeviceInventoryJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount userAccount;
    private WarehouseEnterprise warehouseEnterprise;
    private String status;
    private SupplierEnterprise supplierEnterprise;
   // private String message;
    public DeviceInventoryJPanel(JPanel userProcessContainer , EcoSystem system , UserAccount userAccount,WarehouseEnterprise warehouseEnterprise) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount=userAccount;
        this.system=system;
        this.warehouseEnterprise=warehouseEnterprise;
        
        
        
       // sNameTextField.setText(userAccount.getEmployee().getName());
        populateTable();
    }

    
    
    public void populateTable(){
        
        DefaultTableModel dtm = (DefaultTableModel) tblProducta.getModel();
        dtm.setRowCount(0);
       
        for (Product product : warehouseEnterprise.getProductCatalog().getProductCatalog()) {
           
             
            
            Object row[] = new Object[8];

            row[0] = product;
            row[1] = product.getModelNumber();
            row[2] = product.getPrice();
            row[3] = product.getAvalaibility();
            row[4] = product.getLastMaintenance();
            row[5] = product.getNextMaintenance();
            
             Date today = new Date();
              Calendar cal = Calendar.getInstance();
          cal.setTime(today);
        cal.add(Calendar.DATE,7);
         today=cal.getTime();
             
            if (today.compareTo(product.getNextMaintenance()) > 0) {
                status= "Less than 7 days  left for Maintenance";
                product.setStatus(status);
                row[6]=status;
                
                
            }            
            else if(today.compareTo(product.getNextMaintenance())<0){
                    status = "There is Time for Maintenance";
                    product.setStatus(status);
                    row[6]=status;
                 
            }
            row[7]=product.getLocation();

            dtm.addRow(row);
        }
    
    
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProducta = new javax.swing.JTable();
        btnSchedule = new javax.swing.JButton();
        backjButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblProducta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "id", "Price", "Availability", "Last Maintenance Date", "Next Maintenance", "Status", "location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProducta);

        btnSchedule.setText("Send to Supplier");
        btnSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScheduleActionPerformed(evt);
            }
        });

        backjButton2.setText("<<BACK");
        backjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 901, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSchedule)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backjButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(backjButton2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(btnSchedule)
                .addGap(27, 27, 27))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScheduleActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProducta.getSelectedRow();
        
        if(selectedRow>=0)
        {
            Product product = (Product)tblProducta.getValueAt(selectedRow, 0);
        
         MaintenanceWorkRequest request = new MaintenanceWorkRequest();
        //request.setSupplier((Supplier)userAccount.getEmployee());
        
        String message="Maintenance Required";
        request.setMessage(message);
        request.setSender(userAccount);
        //request.setStatus("Maintenance Required");
        request.setProduct(product);
        request.getProduct().setLocation("SUPPLIER");
       
  
        
          
        Enterprise ent=null;
        for(Network network: system.getNetworkList()){
            for (Enterprise e : network.getEnterpriseDirectory().getEnterpriseList()){
                if(e instanceof SupplierEnterprise)
                    {   supplierEnterprise=(SupplierEnterprise)e;
                    {if(product.getManufacturer().equalsIgnoreCase(e.getName()))
                    ent=e;
                   
                    break;
                    }
                }
            }
            if(ent!=null){
            ent.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            
            
            }
            
            if (message == null) {
            JOptionPane.showMessageDialog(null, "Please Enter A Message");
        }
            
        }
        
        populateTable();

       } 
    }//GEN-LAST:event_btnScheduleActionPerformed

    private void backjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backjButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backjButton2;
    private javax.swing.JButton btnSchedule;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProducta;
    // End of variables declaration//GEN-END:variables
}
