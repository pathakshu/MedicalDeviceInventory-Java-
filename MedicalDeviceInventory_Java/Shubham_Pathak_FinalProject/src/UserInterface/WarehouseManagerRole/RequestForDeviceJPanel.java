/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.WarehouseManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Product;
import Business.Enterprise.WarehouseEnterprise;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OperationRequestToDeviceManagerWorkRequest;
import Business.WorkQueue.RequestToWarehouseManager;
import Business.WorkQueue.WorkRequest;
import DeviceScheduling.Schedule;
import java.awt.CardLayout;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shubham
 */
public class RequestForDeviceJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestForDeviceJPanel
     */
    
    private JPanel userProcessContainer;
    private RequestToWarehouseManager request;
    private UserAccount userAccount;
    private WarehouseEnterprise warehouseEnterprise;
    private EcoSystem system;
   // private String deviceName;
    public RequestForDeviceJPanel(JPanel userProcessContainer, RequestToWarehouseManager request,UserAccount userAccount,WarehouseEnterprise warehouseEnterprise,EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount=userAccount;
        this.warehouseEnterprise=warehouseEnterprise;
        this.request=request;
        this.system=system;
        
        //Schedule schedule = new Schedule();
        
        populateTable();
        populateDeviceTable();
    }
    
      private void populateTable(){
          DefaultTableModel model = (DefaultTableModel) tblWorkReq.getModel();
          model.setRowCount(0);
          for (WorkRequest req : warehouseEnterprise.getWorkQueue().getWorkRequestList()) {
              if (req instanceof RequestToWarehouseManager) {
                  Object[] row = new Object[6];
                  row[0] = req;
                String  deviceName=req.getDeviceName();
                  row[1] = deviceName;
                  row[2] = req.getFromDate();
                  row[3] = req.getToDate();
                  row[4] = req.getSender().getEmployee().getName();
                  //row[5] = req.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
                  row[5] = req.getStatus();
                  //row[6] = ((RequestToWarehouseManager) req).getHospitalName();
                   // row[6]=req.getOperationDate();
                  

// row[6]=((((OperationRequestToDeviceManagerWorkRequest)request).getOperationDate()).add(-3));
                  model.addRow(row);
              }
    }}
      
      private void populateDeviceTable(){         
        DefaultTableModel dtm = (DefaultTableModel) tblProducta.getModel();
        dtm.setRowCount(0);     
        for (Product product : warehouseEnterprise.getProductCatalog().getProductCatalog()) {
            Object row[] = new Object[7];
            row[0] = product;
            row[1] = product.getModelNumber();
            row[2] = product.getPrice();
            row[3] = product.getFromDate();
            row[4] = product.getToDate();
            row[5] = product.getLocation();
            row[6] = product.getAvailability();
            dtm.addRow(row);
        }
      }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkReq = new javax.swing.JTable();
        refreshJButton = new javax.swing.JButton();
        btnSchedule = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProducta = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblWorkReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Device Name", "Request Booking From ", "Requested Booking Till", "sender", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkReq);

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        btnSchedule.setText("Schedule This Device");
        btnSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScheduleActionPerformed(evt);
            }
        });

        tblProducta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "id", "price", "Booking From Date", "Bookinh Till Date", "location", "Availability"
            }
        ));
        jScrollPane3.setViewportView(tblProducta);

        jButton1.setText("View Scheduling History");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1088, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1088, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(refreshJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSchedule)
                .addGap(163, 163, 163)
                .addComponent(jButton1)
                .addGap(396, 396, 396))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(137, 137, 137)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnSchedule)
                    .addComponent(refreshJButton))
                .addContainerGap(50, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void btnScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScheduleActionPerformed
//        // TODO add your handling code here:
        int selectedRow = tblProducta.getSelectedRow();
        int selectedRow1=tblWorkReq.getSelectedRow();
        if (selectedRow >= 0&& selectedRow1>=0){

             Product product = (Product)tblProducta.getValueAt(selectedRow, 0);
             WorkRequest r=(WorkRequest)tblWorkReq.getValueAt(selectedRow1,0);
                   // for (WorkRequest req : warehouseEnterprise.getWorkQueue().getWorkRequestList()) {
                        if (r instanceof RequestToWarehouseManager)                       
                        {
                            Schedule schedule = product.getScheduleCatalog().addSchedule();
                            if (product.getToDate() == null) {
                                product.setFromDate(r.getFromDate());
                                product.setToDate(r.getToDate());
                                product.setAvailability("BOOKED");
                                r.setStatus("Scheduled");
                                
                                
                                product.setLocation("HOSPITAL");
                                schedule.setFromDate(r.getFromDate());
                                schedule.setToDate(r.getToDate());
                            } 
                            else if((product.getToDate() != null) && (product.getLocation().equalsIgnoreCase("HOSPITAL"))){
                                if(r.getFromDate().compareTo(product.getToDate())>0){
                                   // product.setStatus("PRE BOOKED");
                                    r.setStatus("PRE BOOKED");
                                    
                                    schedule.setFromDate(r.getFromDate());
                                    schedule.setToDate(r.getToDate());
                            }
                            
                            }
                            if(r.getToDate().compareTo(product.getNextMaintenance())==0){
                                JOptionPane.showMessageDialog(null, "Booking Date Clashes with Maintenance Date, Please choose another date");
                          
                                if(r.getFromDate().compareTo(product.getNextMaintenance())==0){
                                JOptionPane.showMessageDialog(null, "Booking Date Clashes with Maintenance Date, Please choose another date");
                                
                                }
                                
                                if(product.getLocation().equalsIgnoreCase("HOSPITAL")){
                                    if(r.getFromDate().compareTo(product.getFromDate())==0){JOptionPane.showMessageDialog(null, "Device is already booked for this date");}
                                }
                        }
                       // ((OperationRequestToDeviceManagerWorkRequest)r).setStatus(r.getStatus());
                    
                    populateDeviceTable();
                
             
                }}
    }//GEN-LAST:event_btnScheduleActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        SchedulingHistoryJPanel panel = new SchedulingHistoryJPanel(userProcessContainer, system, userAccount,warehouseEnterprise);
        userProcessContainer.add("manageOrganizationJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSchedule;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable tblProducta;
    private javax.swing.JTable tblWorkReq;
    // End of variables declaration//GEN-END:variables
}
