/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Supplier;


import Business.EcoSystem;
import Business.Enterprise.SupplierEnterprise;
import Business.Enterprise.MasterOrderCatalog;
import Business.Enterprise.Order;
import Business.Enterprise.OrderItem;
import Business.Enterprise.Product;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;



/**
 *
 * @author Shubham
 */
public class ProductPerformanceJPanel extends javax.swing.JPanel {
    DefaultCategoryDataset barChartData=new DefaultCategoryDataset();
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private MasterOrderCatalog moc;
    private SupplierEnterprise supplierEnterprise;
    private EcoSystem system;
   
   
            int productCounter=0;
            int salesCounter=0;
            int max=0;
            
   
    
    public ProductPerformanceJPanel(JPanel userProcessContainer,UserAccount userAccount,EcoSystem system,SupplierEnterprise supplierEnterprise) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.userAccount=userAccount;
        this.system=system;
        this.supplierEnterprise=supplierEnterprise;
        
        moc=supplierEnterprise.getMoc();
        
      //  supplier = (Supplier)userAccount.getEmployee();
       
    }

    public void countProductSold(){
        
        for(Order order:moc.getMasterOrderCatalog()){
            for (OrderItem oi : order.getOrder()) {
                for(Product product : supplierEnterprise.getProductCatalog().getProductCatalog()){
                    if (oi.getProduct().getProdName().equals(product.getProdName())){
                         productCounter= productCounter+oi.getQuantity();
                        }
                }
        }
    txtTotalProductsSold.setText(Integer.toString(productCounter));
    
    }
    }
    
    public void countSalesAmount(){
        for(Order order : moc.getMasterOrderCatalog()){
            for(OrderItem oi :order.getOrder()){
                for(Product product : supplierEnterprise.getProductCatalog().getProductCatalog()){
                    if(oi.getProduct().getProdName().equals(product.getProdName()))
                    {
                        salesCounter=salesCounter+(oi.getQuantity()*(oi.getProduct().getPrice()));
                    }
                }
                }
        }
        
        txtTotalSalesAmount.setText(Integer.toString(salesCounter));
    }
    
    public void topSoldProduct(){
        ArrayList <Product> sorders = new ArrayList();
        sorders = supplierEnterprise.getProductCatalog().getProductCatalog();
        Product product = sorders.get(0);
        
        for(int i=1;i<sorders.size();i++){
        Product temp = sorders.get(i);
        if(product.getCounter()<temp.getCounter()){
        product=temp;
        }
        
    txtTopSoldProduct.setText(product.getProdName());
    }}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTotalProductsSold = new javax.swing.JTextField();
        txtTotalSalesAmount = new javax.swing.JTextField();
        txtTopSoldProduct = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnProductsSold = new javax.swing.JButton();
        btnSalesAmount = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnGraph = new javax.swing.JButton();

        jLabel1.setText("Product Performance");

        btnProductsSold.setText("Total Products Sold");
        btnProductsSold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductsSoldActionPerformed(evt);
            }
        });

        btnSalesAmount.setText("Total Sales Amount");
        btnSalesAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesAmountActionPerformed(evt);
            }
        });

        jButton3.setText("Top Sold Product");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnGraph.setText("Graphical View");
        btnGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraphActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnProductsSold)
                    .addComponent(btnSalesAmount)
                    .addComponent(jButton3))
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTotalProductsSold, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(txtTotalSalesAmount)
                    .addComponent(txtTopSoldProduct))
                .addContainerGap(620, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(124, 124, 124))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnGraph)
                        .addGap(130, 130, 130))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalProductsSold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnProductsSold))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalSalesAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalesAmount))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(txtTopSoldProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jButton3)))
                .addGap(18, 18, 18)
                .addComponent(btnGraph)
                .addContainerGap(241, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProductsSoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductsSoldActionPerformed
        // TODO add your handling code here:
        countProductSold();
    }//GEN-LAST:event_btnProductsSoldActionPerformed

    private void btnSalesAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesAmountActionPerformed
        // TODO add your handling code here:
        countSalesAmount();
    }//GEN-LAST:event_btnSalesAmountActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        topSoldProduct();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraphActionPerformed
        // TODO add your handling code here:
        for(Product product :supplierEnterprise.getProductCatalog().getProductCatalog()){
             
            
         
            barChartData.setValue(product.getCounter(),"Value ", product.getProdName());
            barChartData.setValue(product.getCounter()*product.getPrice(),"Value",product.getProdName());
            
            
        } 
            JFreeChart chart = ChartFactory.createBarChart("Product Performance Graph", "Performance", "Range", barChartData, PlotOrientation.VERTICAL, false, true, false);
            CategoryPlot p = chart.getCategoryPlot();
            p.setRangeGridlinePaint(Color.BLACK);
            ChartFrame frame = new ChartFrame("Bar Chart", chart);
            frame.setVisible(true);
            frame.setSize(450,400);
    }//GEN-LAST:event_btnGraphActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGraph;
    private javax.swing.JButton btnProductsSold;
    private javax.swing.JButton btnSalesAmount;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtTopSoldProduct;
    private javax.swing.JTextField txtTotalProductsSold;
    private javax.swing.JTextField txtTotalSalesAmount;
    // End of variables declaration//GEN-END:variables
} 
